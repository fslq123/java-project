<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--配置springIoc,把service对象配置进来-->
    <bean id="accountService" class="com.fslq.impl.AccountServiceImpl"></bean>
    <!--spring中基于xml的Aop配置：
        1.把通知bean交给spring管理
        2.使用aop:config标签表明开始Aop配置
        3.使用aop:aspect标签表明配置切面：
            id:唯一标识
            ref:指定通知类bean的id
        4.在aop:aspect标签内部使用对应的标签配置通知类型
            aop:before配置前置通知
                method：指定前置通知方法
                pointcut:用于指定切入点表达式，指定业务层增强方法
                        关键字：execution（表达式）
                                a.访问修饰符 返回值 包名.包名...方法名
                                    execution(public void com.fslq.impl.AccountServiceImpl.saveAccount())
                                b. 通配符
                                    execution(* *.*.impl.AccountServiceImpl.saveAccount())
                                    execution(* *.*.*.*.saveAccount())
                                    execution(* *.*.*.*.*())
                                    execution(* *.*.*.*.*(..))

    -->
    <!--配置Logger类-->
    <bean id="logger" class="com.fslq.utils.Logger"></bean>
    <!--配置aop-->
    <aop:config>
        <aop:aspect id="logAdvice" ref="logger">
            <!--前置通知-->
            <aop:before method="printLog" pointcut="execution(* *.*.*.*.*(..))"></aop:before>
        </aop:aspect>
    </aop:config>
</beans>